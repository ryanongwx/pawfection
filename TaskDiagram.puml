@startuml
class "VolunteerDashboardView" {
  -FirebaseAuth _auth
  +User currentUser
  +PetService petService
  +void initState()
  +Widget build()
}

"VolunteerDashboardView" o-- "FirebaseAuth"
"VolunteerDashboardView" o-- "User"
"VolunteerDashboardView" o-- "PetService"

class "TaskItem" {
  +Task task
  +PetService petService
  +State<TaskItem> createState()
}

"TaskItem" o-- "Task"
"TaskItem" o-- "PetService"

class "TaskItemState" {
  +User currentUser
  +PetService petService
  +void initState()
  +Icon showCategoryIcon()
  +Widget build()
}

"TaskItemState" o-- "User"
"TaskItemState" o-- "PetService"

class "FirebaseAuth" {
  Abstracted
}

class "User" {
  +String referenceId
  +String username
  +String email
  +String role
  +List<Timestamp?> availabledates
  +List<String?> preferences
  +List<String?> experiences
  +String profilepicture
  +String contactnumber
  +int taskcount
  +String bio
  +int hashCode
  +bool ==()
  +String toString()
}

class "Task" {
  +String? referenceId
  +String name
  +String createdby
  +String? assignedto
  +String description
  +String category
  +String? categoryothers
  +String status
  +List<String?> resources
  +String contactperson
  +String contactpersonnumber
  +String? feedback
  +List<Timestamp?> deadline
  +String? pet
  +List<String?> requests
  +String toString()
}

class "PetService" {
  +PetRepository petRepository
  +Pet petFromJson()
  +Map<String, dynamic> petToJson()
  +Pet fromSnapshot()
  +List<Pet> snapshotToPetList()
  +List<Pet> snapshotToPetListModified()
  +void updatePet()
  +void deletePet()
  +dynamic addPet()
  +dynamic findPetByPetID()
  +dynamic getPetList()
  +dynamic findPetByPetname()
}

@enduml